import java.util.*;

public class utilClass {

    public static void main(String[] args) {
    
        One a= new One();
        a.display();
        
        Two b= new Two();
        b.display();
        
        System.out.println(b.add(4,2));
        System.out.println(b.add(5.,2.)); 
        
        EncapTest encap = new EncapTest();
        encap.setName("Nitish Mishra");
        System.out.println("Name : " + encap.getName());
        
        Phone latestVersion = new PhoneSet2();
        latestVersion.call();
        latestVersion.camera();
        latestVersion.musicPlayer();
        latestVersion.videoGame();
    
    }

}


class One {

    public void display() {
        System.out.println("One");
    }

}

//inheritance...
class Two extends One {

    // Overriding display method of One...
    public void display() {
        System.out.println("Two");
    }

    public int add(int x, int y) {
        return x+y;
    }

    //Overload add function by changind type of argument...
    public double add(double x,double y) {
        return x+y;
    }

}

//encapsulation example...
class EncapTest {

    private String name;
    
    public String getName() {
        return name;
    }

    public void setName(String newName) {
        name = newName;
    }

}

//abstraction...
abstract class Phone {

    public void call() {
        System.out.println("Calling...");
    }
    
    public abstract void camera();
    public abstract void musicPlayer();
    public abstract void videoGame();
}

abstract class PhoneSet1 extends Phone{

    public void camera(){
        System.out.println("\nCamera...");
    }
}

class PhoneSet2 extends PhoneSet1 {
    public void musicPlayer(){
        System.out.println("\nMusic...");
    }
    
    public void videoGame(){
        System.out.println("\nVideogame...");
    }
}
